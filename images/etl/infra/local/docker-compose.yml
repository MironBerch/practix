services:

  postgres_to_elastic:
    restart: always
    build: ../../postgres-to-elastic/
    command: >
      sh -c "cd /app/src/
      && uv run main.py"
    volumes:
      - ../../postgres-to-elastic/:/app
    environment:
      - "SECRET_KEY=secretkey"
      - "DB_NAME=movies"
      - "DB_USER=postgres"
      - "DB_PASSWORD=postgres"
      - "DB_HOST=movies_db"
      - "DB_PORT=5432"
      - "REDIS_HOST=redis"
      - "REDIS_PORT=6379"
      - "REDIS_DB=0"
    depends_on:
      movies_db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elastic:
        condition: service_healthy

  postgres_to_mongo:
    restart: always
    build: ../../postgres-to-mongo/
    command: >
      sh -c "cd /app/src/
      && uv run main.py"
    volumes:
      - ../../postgres-to-mongo/:/app
    environment:
      - "MOVIES_DB_NAME=movies"
      - "MOVIES_DB_USER=postgres"
      - "MOVIES_DB_PASSWORD=postgres"
      - "MOVIES_DB_HOST=movies_db"
      - "MOVIES_DB_PORT=5432"
      - "AUTH_DB_NAME=auth"
      - "AUTH_DB_USER=postgres"
      - "AUTH_DB_PASSWORD=postgres"
      - "AUTH_DB_HOST=auth_db"
      - "AUTH_DB_PORT=5432"
      - "REDIS_HOST=redis"
      - "REDIS_PORT=6379"
      - "REDIS_DB=0"
    depends_on:
      mongo:
        condition: service_healthy
      movies_db:
        condition: service_healthy
      auth_db:
        condition: service_healthy
      redis:
        condition: service_healthy

  movies_db:
    build: ../../infra/postgres/
    restart: always
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_DB=movies"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
    volumes:
        - movies_db_volume:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready --dbname=movies --username=postgres
      interval: 5s
      timeout: 5s
      retries: 100

  auth_db:
    image: postgres:16-alpine
    restart: always
    ports:
      - "5433:5432"
    environment:
      - "POSTGRES_DB=auth"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
    volumes:
        - auth_db_volume:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready --dbname=auth --username=postgres
      interval: 5s
      timeout: 5s
      retries: 100

  elastic:
    image: elasticsearch:8.13.0
    expose:
      - "9200"
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ports:
      - "9200:9200"
    healthcheck:
      test: curl -s http://elastic:9200 >/dev/null || exit 1
      interval: 5s
      timeout: 5s
      retries: 100

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 5s
      retries: 100

  mongo:
    image: mongo:8.0.1
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 5s
      timeout: 5s
      retries: 100

volumes:
  movies_db_volume:
  auth_db_volume:
