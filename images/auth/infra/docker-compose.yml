services:

  auth:
    restart: always
    build: ../.
    command: >
      sh -c "cd /app/src/
      && uv run flask --app manage:create_app migrate
      && uv run gunicorn --workers 1 --bind 0.0.0.0:5000 manage:app"
    ports:
      - "5000:5000"
    expose:
      - "5000"
    environment:
      - "JWT_SECRET_KEY=${JWT_SECRET_KEY}"
      - "SECRET_KEY=${SECRET_KEY}"
      - "FLASK_PORT=5000"
      - "DEBUG=False"
      - "DB_NAME=${AUTH_DB_NAME}"
      - "DB_USER=${AUTH_DB_USER}"
      - "DB_PASSWORD=${AUTH_DB_PASSWORD}"
      - "DB_HOST=auth_db"
      - "DB_PORT=5432"
      - "REDIS_HOST=redis"
      - "REDIS_PORT=6379"
      - "REDIS_DB=1"
      - "NOTIFICATIONS_RECEIVER_HOST=${NOTIFICATIONS_RECEIVER_HOST}"
      - "NOTIFICATIONS_RECEIVER_PORT=${NOTIFICATIONS_RECEIVER_PORT}"
    depends_on:
      - auth_db
      - redis

  auth_db:
    image: postgres:16-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_USER=${AUTH_DB_USER}"
      - "POSTGRES_PASSWORD=${AUTH_DB_PASSWORD}"
      - "POSTGRES_DB=${AUTH_DB_NAME}"

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"

  nginx:
    image: nginx:1.21-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./logs/nginx:/var/log/nginx
    ports:
      - "80:80"
    depends_on:
      - auth
